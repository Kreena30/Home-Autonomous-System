// include the library code:
#include <LiquidCrystal.h>
#include <Servo.h>

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

//ConstAssigment 
int distanceThreshold = 0;
int sensorValue = 0;
int cm = 0;
int inches = 0;
int duration = 0;
int distance = 0;
int ussensor = 0;
int val = 0;
//PinAssigment 
const int LM35 = A2;
int releNO = 13;
int releNO1 = 10;
int inputPir = 8;
int pizeoPin = A3;
int resuldoSensorLDR;
int sensorLDR = A0;
int sensorPin = A2;
int const PINO_SGAS = A1;
int buzzer = A3;
int sensorThres = 400;

Servo servo_9;


//UltrasonicSensor 
long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  // Clear the trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  // Sets the trigger pin to HIGH state for 10 microseconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  // Reads the echo pin, and returns the sound wave travel time in microseconds
  return pulseIn(echoPin, HIGH);
}


void setup() {
  // defining the pin mode
  lcd.begin(16, 2);
  pinMode(releNO, OUTPUT);
  pinMode(releNO1, OUTPUT);
  pinMode(inputPir, INPUT);
  pinMode(sensorLDR, INPUT);
  pinMode(sensorPin, INPUT);
  pinMode(pizeoPin, OUTPUT );
  pinMode(buzzer, OUTPUT);
  pinMode(LM35, INPUT);
  Serial.begin(9600);
  servo_9.attach(9);
  servo_9.write(0);
}




void loop(){
  // set threshold distance to activate LEDs
  distanceThreshold = 350;
  // measure the ping time in cm
  cm = 0.01723 * readUltrasonicDistance(7, 6);
  // convert to inches by dividing by 2.54
  inches = (cm / 2.54);
    lcd.setCursor(0,0); // Sets the location at which subsequent text written to the LCD will be displayed
  lcd.print("D:"); // Prints string "Distance" on the LCD
  lcd.print(cm); // Prints the distance value from the sensor
  lcd.print("cm");
  delay(10);
  
 // AC 
  int reading = analogRead(sensorPin);
// now print out the temperature
float voltage = reading * 0.004882814;
float temperatureC = (voltage - 0.5) * 100;
   lcd.setCursor(7,1);
   lcd.print("T:");
   lcd.setCursor(14,1);
   lcd.print("C");
   lcd.setCursor(9,1);
   lcd.print(temperatureC);
 
 delay(100);
 
  if (temperatureC > 32 ) {
      digitalWrite(releNO1, HIGH);
      delay(100);
  }
  else {
    digitalWrite(releNO1, LOW);
    delay(100);
  }
  
//gas print
   
  int color = analogRead(PINO_SGAS);
  
  lcd.setCursor(9,0); 
  //lcd.print("");
  if(color <= 85){
    lcd.print("SL:Low ");
  } else if(color <= 120){
    lcd.print("SL:Med ");
  } else if(color <= 200){
    lcd.print("SL:High");
  } else if(color <= 300){
  	tone(buzzer, 1000, 200);
    lcd.print("SL:Ext ");  
  } 
  delay(150);
  
  
 // servo(Door)
  
   ussensor = 0.006783 * readUltrasonicDistance(6, 7);
  
  if (cm < 320)
  {
    servo_9.write(180);
  } else  {
    servo_9.write(0);
  }
       delay(100);
  
  
  // photoresistor
  
  val = digitalRead(inputPir);
  resuldoSensorLDR = analogRead(sensorLDR);
  if(resuldoSensorLDR<600)
  {
    if(val == HIGH)
    {
      digitalWrite(releNO, HIGH);
      lcd.setCursor(0,1);
  lcd.print("L: On ");
      delay(50000);
  }
    else{
      digitalWrite(releNO, LOW);lcd.setCursor(0,1);
  lcd.print("L: Off");
      delay(300);
  }
}
  else{ digitalWrite (releNO, LOW);
  Serial.println(resuldoSensorLDR);
  delay(500);
       
}
}
